"use client";
import React, { useEffect, useState } from "react";
import { Spotlight } from './ui/Spotlight';
import { Carousel, Card } from "./ui/apple-cards-carousel";
import InfoVideo from "@/components/Videos";
import { MagicButton } from './ui/MagicButton';
import { Menu} from './ui/NavBar';
import { cn } from "@/utils/cn";
import { HoverEffect } from "./ui/CardHoverEffect";
import WobbleCardInfoVN from "./CardVN";
import FooterVN from "./FooterVN";
import Image from 'next/image'; // Assuming you're using Next.js
import { FaBrain, FaEye, FaShieldAlt } from 'react-icons/fa';
import { IoLogoElectron, IoFlash, IoTime } from 'react-icons/io5';
import { InfiniteMovingCards } from "./ui/InfiniteMovingCards";
import { SignupFormDemo } from "./ui/SignUp"; // adjust path if needed
import { usePathname, useRouter } from 'next/navigation';



const Hero = () => {
    const [] = useState(false); // toggle state
    const cards = data.map((card, index) => (
        <Card key={card.src} card={card} index={index} layout={true} />
      ));
    return (
        <div className="pb-10 pt-26">
            <div>
            <Spotlight className="top-60 left-10 md:-left-32 md:-top-20 h-screen" fill="white" />
            <Spotlight className="top-30 right-60 md:-right-32 md:-top-50 h-screen" fill="white" />
            <Spotlight className="top-10 left-full h-[100vh] w-[60vw]" fill="purple" />
            <Spotlight className="top-28 left-80 h-[80vh] w-[50vw]" fill="blue" />
            </div>

            <div className="relative w-full flex items-center justify-center z-50">
            <Navbar className="top-2" />
          </div>
            {/* <div className="relative  w-full">
            <FloatingNav navItems={navItems} />
             </div> */}
            <div className="h-[40rem] w-full dark:bg-black  bg-grid-white/[0.2] bg-grid-black/[0.2] relative flex items-center justify-center">
            {/* Radial gradient for the container to give a faded look */}
            <div className="absolute pointer-events-none inset-0 flex items-center justify-center dark:bg-black [mask-image:radial-gradient(ellipse_at_center,transparent_20%,black)]">
            </div>
            <div className="flex justify-center relative my-20 z-5">
                <div className="max-w-[89vw] md:max-w-2xl lg:max-w-[60vw] flex flex-col items-center justify-center">
                   <div className="flex justify-center items-center space-x-4 py-8">
                  {/* <img src="/circle.svg" alt="OpenMind Logo" className="w-12 h-12" /> */}
                  <h1 className="text-5xl sm:text-7xl font-bold bg-clip-text text-transparent bg-gradient-to-br from-neutral-400 to-yellow-100 py-8 text-center ">
                    OpenMind Robotics
                  </h1>
                </div>
                    <p className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-yellow-500 to-white-100  text-center">
                    Embodied AI ƒë·ªãnh h√¨nh
                    </p>
                    <p className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-yellow-500 to-white-100  text-center">
                     t∆∞∆°ng lai ng√†nh Logistics
                    </p>
                   
                    {/* <TextGenerateEffect
                        words="AI-Powered Robots Redefining Industry"
                        className="text-center text-[40px] md:text-5xl lg:text-6xl"
                    /> */}
                    
                   <a href='#contact_us'>
                        <p className="text-2xl sm:text-3xl font-bold text-center text-neutral-600 dark:text-neutral-400 mt-4">
                        <MagicButton title="Y√™u c·∫ßu Demo" icon={undefined} position={''}/>
                        </p>
                    </a>
                
                </div>
               
            </div>
            </div>

            <div className="w-full h-full rounded-lg ">
            <InfoVideo />
            </div>
            
            {/* <Grid /> */}
            
           

            <div id="solutions_pick_place" className="w-full h-full py-10">
            <h2   className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-yellow-100 py-8 text-center">
            Gi·∫£i ph√°p robotics c·ªßa ch√∫ng t√¥i
            </h2>
            <Carousel items={cards} />
            </div>
            
            <div id="technology" className="w-full h-full py-20">
            <h2  className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-yellow-100 py-8 text-center">
            C√°c c√¥ng ngh·ªá l√µi 
            </h2>
            <WobbleCardInfoVN />
            </div>

            
            <div id="why_us" className="w-full h-full py-10">
            <h2 className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-yellow-100 py-8 text-center">
             T·∫°i sao ch·ªçn ch√∫ng t√¥i?
            </h2>
            <HoverEffect items={projects} />
            </div>
            
              {/* üîÅ Infinite Moving Logos */}
              <div id="technology" className="w-full h-full py-20">
            <h2  className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-yellow-100 py-8 text-center">
            H·ªó tr·ª£ ƒëa d·∫°ng c√°c h√£ng robot
            </h2>

          <div className="w-full max-w-7xl">
            <InfiniteMovingCards
              items={partnerLogos}
              direction="left"
              speed="normal"
            />
          </div>
          </div>

        

              <section id="contact_us" className="bg-black dark:bg-black py-16 px-4 md:px-8">
              <div className="max-w-4xl mx-auto text-center">
                <h1   className="text-4xl sm:text-5xl font-bold  bg-clip-text text-transparent bg-gradient-to-b from-neutral-300 to-yellow-100 py-8 text-center">
                  Li√™n h·ªá v·ªõi ch√∫ng t√¥i
                </h1>
                <p className="mt-4 text-lg font-bold text-neutral-600 text-white text-neutral-300">
                  T·ª± ƒë·ªông h√≥a c·∫•p cao cho nh√† x∆∞·ªüng c·ªßa b·∫°n
                </p>
                  <div className="mt-12">
                  <SignupFormDemo />
                </div>
                
                </div>
            </section>
  

            

            <div className="w-full py-20">
            <FooterVN />
            </div>
            {/* <BackGroundBoxes /> */}
        </div>

        
    );
}
export const projects = [
  {
    title: "Cu·ªôc c√°ch m·∫°ng logistics d·ª±a tr√™n AI",
    description: "C√¥ng ngh·ªá s√¢u v√† tr√≠ tu·ªá nh√¢n t·∫°o ti√™n ti·∫øn c·ªßa ch√∫ng t√¥i cho ph√©p cung c·∫•p gi·∫£i ph√°p robot ch·ªçn v√† ƒë·∫∑t h√†ng t·ªët nh·∫•t cho doanh nghi·ªáp c·ªßa b·∫°n",
    icon: FaBrain
  },
  {
    title: "N·ªÅn t·∫£ng Digital Twins s√°ng t·∫°o",
    description: "C√¥ng ngh·ªá Digital Twins c·ªßa ch√∫ng t√¥i t·∫°o ra c√°c b·∫£n sao ·∫£o c·ª±c k·ª≥ ch√≠nh x√°c c·ªßa h·ªá th·ªëng robot, thay ƒë·ªïi c√°ch thi·∫øt k·∫ø, ki·ªÉm th·ª≠ v√† v·∫≠n h√†nh c√°c h·ªá th·ªëng n√†y",
    icon: IoLogoElectron
  },
  {
    title: "C√¥ng ngh·ªá t√≠ch h·ª£p th·ªã gi√°c ƒë·ªôc ƒë√°o",
    description: "C√°c thu·∫≠t to√°n th·ªã gi√°c m√°y t√≠nh ti√™n ti·∫øn gi√∫p robot nh·∫≠n bi·∫øt v√† hi·ªÉu m√¥i tr∆∞·ªùng xung quanh v·ªõi ƒë·ªô ch√≠nh x√°c v∆∞·ª£t tr·ªôi",
    icon: FaEye
  },
  {
    title: "TƒÉng t·ªëc ho√†n v·ªën ƒë·∫ßu t∆∞",
    description: "Th·ªùi gian thi·∫øt l·∫≠p nhanh, gi√∫p h·ªá th·ªëng c·ªßa b·∫°n ho·∫°t ƒë·ªông ngay l·∫≠p t·ª©c v√† tr·∫£i nghi·ªám ho√†n v·ªën ƒë·∫ßu t∆∞ nhanh ch√≥ng th√¥ng qua n√¢ng cao hi·ªáu qu·∫£ v·∫≠n h√†nh",
    icon: IoTime
  },
  {
    title: "NƒÉng su·∫•t tƒÉng cao",
    description: "Gi·∫£i ph√°p c·ªßa ch√∫ng t√¥i th·ª±c hi·ªán c√¥ng vi·ªác nhanh h∆°n nhi·ªÅu, v·ªõi c√¥ng su·∫•t v√† s·∫£n l∆∞·ª£ng l·ªõn h∆°n, √≠t l·ªói v√† khuy·∫øt t·∫≠t h∆°n, duy tr√¨ ch·∫•t l∆∞·ª£ng ƒë·ªìng ƒë·ªÅu qua c√°c l√¥ s·∫£n xu·∫•t",
    icon: IoFlash
  },
  {
    title: "An to√†n ƒë∆∞·ª£c c·∫£i thi·ªán",
    description: "Robot c√≥ th·ªÉ ƒë·∫£m nh·∫≠n c√°c nhi·ªám v·ª• nguy hi·ªÉm nh∆∞ n√¢ng v·∫≠t n·∫∑ng ho·∫∑c l√†m vi·ªác trong m√¥i tr∆∞·ªùng r·ªßi ro, gi·∫£m thi·ªÉu nguy c∆° ch·∫•n th∆∞∆°ng cho ng∆∞·ªùi lao ƒë·ªông",
    icon: FaShieldAlt
  },
];




function Navbar({ className }: { className?: string }) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  const [active, setActive] = useState<string | null>(null);
  const [currentLang, setCurrentLang] = useState<"en" | "vn">("en");
  const [dropdownOpen, setDropdownOpen] = useState(false);


  const router = useRouter();
  const pathname = usePathname();

  useEffect(() => {
    if (pathname?.startsWith("/vn")) {
      setCurrentLang("vn");
    } else {
      setCurrentLang("en");
    }
  }, [pathname]);

  const changeLanguage = (lang: "en" | "vn") => {
    if (!pathname) return;
    const segments = pathname.split("/");

    if (["en", "vn"].includes(segments[1])) {
      segments[1] = lang;
    } else {
      segments.unshift(lang);
    }

    const newPath = segments.join("/");
    setDropdownOpen(false);
    router.push(newPath);
  };

  return (
    <div className={cn("fixed top-10 inset-x-0 max-w-2xl mx-auto z-50 font-bold", className)}>
      <Menu setActive={setActive}>
        <div className="relative px-4 py-2 text-big text-black dark:text-white hover:text-yellow-400 cursor-pointer transition-colors duration-300">
          <a href="/">Trang ch·ªß</a>
        </div>
        <div className="relative px-4 py-2 text-big text-black dark:text-white hover:text-yellow-400 cursor-pointer transition-colors duration-300">
          <a href="#solutions_pick_place">Gi·∫£i ph√°p</a>
        </div>
        <div className="relative px-4 py-2 text-big text-black dark:text-white hover:text-yellow-400 cursor-pointer transition-colors duration-300">
          <a href="#technology">C√¥ng ngh·ªá</a>
        </div>
        {/* <div className="relative px-4 py-2 text-big text-black dark:text-white hover:text-yellow-400 cursor-pointer transition-colors duration-300">
          <a href="#why_us">∆Øu ƒëi·ªÉm</a>
        </div> */}
        <div className="relative px-4 py-2 text-big text-black dark:text-white hover:text-yellow-400 cursor-pointer transition-colors duration-300">
          <a href="#contact_us">Li√™n h·ªá</a>
        </div>

        {/* üåê Language Dropdown */}
        <div className="relative mt-2 ml-4">
          <button
            onClick={() => setDropdownOpen(!dropdownOpen)}
            className="flex items-center space-x-2 p-1 hover:bg-neutral-200 dark:hover:bg-neutral-700 rounded-md transition"
          >
            <Image
              src={`/logos/${currentLang}.png`}
              alt={currentLang === "en" ? "EN" : "VN"}
              width={24}
              height={24}
            />
            <span className="text-sm text-black dark:text-white">
              {currentLang === "en" ? "EN" : "VN"}
            </span>
            <svg
              className="w-3 h-3 text-black dark:text-white"
              fill="none"
              viewBox="0 0 20 20"
            >
              <path
                d="M6 8l4 4 4-4"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </button>

          {/* Dropdown content */}
          {dropdownOpen && (
            <div className="absolute right-0 mt-2 w-32 bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-600 rounded-md shadow-lg z-50">
              <button
                onClick={() => changeLanguage("en")}
                className="w-full flex items-center space-x-2 px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-neutral-700"
              >
                <Image src="/logos/en.png" alt="EN" width={20} height={20} />
                <span className="text-black dark:text-white">EN</span>
              </button>
              <button
                onClick={() => changeLanguage("vn")}
                className="w-full flex items-center space-x-2 px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-neutral-700"
              >
                <Image src="/logos/vn.png" alt="VN" width={20} height={20} />
                <span className="text-black dark:text-white">VN</span>
              </button>
            </div>
          )}
        </div>
      </Menu>
    </div>
  );
}


const VisionContent = () => (
  <div className="bg-[#F5F5F7] p-8 md:p-14 rounded-3xl mb-4">
    <div className="flex justify-center mb-6">
      <Image
        src="/AIparts3.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={500}
        height={300}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        M√¥ h√¨nh AI t√≠ch h·ª£p th·ªã gi√°c ti√™n ti·∫øn h√†ng ƒë·∫ßu
      </span>{" "}
      h·ªá th·ªëng ti√™n ti·∫øn c·ªßa ch√∫ng t√¥i s·ª≠ d·ª•ng c√¥ng ngh·ªá th·ªã gi√°c m√°y t√≠nh v√† AI hi·ªán ƒë·∫°i ƒë·ªÉ gi√∫p robot nh·∫≠n bi·∫øt v√† t∆∞∆°ng t√°c th√¥ng minh v·ªõi m√¥i tr∆∞·ªùng xung quanh. Qu√° tr√¨nh b·∫Øt ƒë·∫ßu v·ªõi vi·ªác qu√©t 3D ƒë·ªô ph√¢n gi·∫£i cao, t·∫°o ra b·∫£n sao k·ªπ thu·∫≠t s·ªë chi ti·∫øt c·ªßa kh√¥ng gian l√†m vi·ªác. C√°c thu·∫≠t to√°n ƒë·ªãnh v·ªã ti√™n ti·∫øn sau ƒë√≥ x√°c ƒë·ªãnh c√°c v·∫≠t th·ªÉ t·ªëi ∆∞u ƒë·ªÉ thao t√°c, t√≠nh ƒë·∫øn c√°c m·ªëi quan h·ªá kh√¥ng gian v√† kh·∫£ nƒÉng va ch·∫°m.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        Nhi·ªÅu chi·∫øn l∆∞·ª£c c·∫ßm n·∫Øm
      </span>{" "}
      AI ƒë√°nh gi√° nhi·ªÅu chi·∫øn l∆∞·ª£c c·∫ßm n·∫Øm kh√°c nhau, m√¥ ph·ªèng k·∫øt qu·∫£ ƒë·ªÉ x√°c ƒë·ªãnh ph∆∞∆°ng ph√°p hi·ªáu qu·∫£ v√† an to√†n nh·∫•t. L·∫≠p k·∫ø ho·∫°ch ƒë∆∞·ªùng ƒëi tinh vi t·ªëi ∆∞u h√≥a qu·ªπ ƒë·∫°o robot, tr√°nh ch∆∞·ªõng ng·∫°i v·∫≠t ƒë·ªìng th·ªùi tƒÉng hi·ªáu su·∫•t. Th√¥ng qua h·ªçc h·ªèi v√† th√≠ch nghi li√™n t·ª•c, h·ªá th·ªëng c·∫£i thi·ªán hi·ªÉu bi·∫øt v·ªÅ th·∫ø gi·ªõi v·∫≠t l√Ω, n√¢ng cao hi·ªáu su·∫•t theo th·ªùi gian.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        K·∫øt h·ª£p nh·∫≠n th·ª©c, suy lu·∫≠n v√† h√†nh ƒë·ªông
      </span>{" "}
      AI t√≠ch h·ª£p c·ªßa ch√∫ng t√¥i k·∫øt h·ª£p li·ªÅn m·∫°ch gi·ªØa nh·∫≠n th·ª©c, suy lu·∫≠n v√† h√†nh ƒë·ªông. N√≥ k·∫øt h·ª£p h·ªçc m√°y, th·ªã gi√°c m√°y t√≠nh v√† ƒëi·ªÅu khi·ªÉn robot ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c s·ª± kh√©o l√©o v√† kh·∫£ nƒÉng gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ g·∫ßn nh∆∞ con ng∆∞·ªùi trong m√¥i tr∆∞·ªùng ph·ª©c t·∫°p v√† ƒë·ªông. C√¥ng ngh·ªá n√†y cho ph√©p robot th·ª±c hi·ªán ƒëa d·∫°ng nhi·ªám v·ª• v·ªõi √≠t l·∫≠p tr√¨nh l·∫°i, t·ª´ l·∫Øp r√°p ch√≠nh x√°c ƒë·∫øn l·∫•y h√†ng th√≠ch ·ª©ng.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        Thu h·∫πp kho·∫£ng c√°ch gi·ªØa tr√≠ tu·ªá s·ªë v√† t∆∞∆°ng t√°c v·∫≠t l√Ω
      </span>{" "}
      h·ªá th·ªëng AI t√≠ch h·ª£p th·ªã gi√°c c·ªßa ch√∫ng t√¥i ƒë·∫°i di·ªán cho b∆∞·ªõc ti·∫øn ƒë√°ng k·ªÉ trong kh·∫£ nƒÉng robot cho s·∫£n xu·∫•t, logistics v√† nhi·ªÅu lƒ©nh v·ª±c kh√°c.
    </p>
  </div>
);

const PickingContent = () => (
  <div className="bg-[#F5F5F7] p-8 md:p-14 rounded-3xl mb-4">
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        V·ªõi c√¥ng ngh·ªá s√¢u v√† AI c√πng c√¥ng ngh·ªá Digital Twins ti√™n ti·∫øn.
      </span>{" "}
      Ch√∫ng t√¥i c√≥ th·ªÉ cung c·∫•p gi·∫£i ph√°p robot ch·ªçn v√† ƒë·∫∑t h√†ng t·ªët nh·∫•t cho doanh nghi·ªáp c·ªßa b·∫°n. C√°c h·ªá th·ªëng robot ti√™n ti·∫øn n√†y ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ l√†m vi·ªác an to√†n v√† hi·ªáu qu·∫£ c√πng v·ªõi nh√¢n vi√™n con ng∆∞·ªùi. H·ªó tr·ª£ nhi·ªÅu robot c·ªông t√°c nh∆∞ Universal Robot, Panda, Xarm, v.v. V√† to√†n b·ªô quy tr√¨nh ƒë∆∞·ª£c chia th√†nh 4 b∆∞·ªõc:
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        B∆∞·ªõc 1: ƒê·ªëi t∆∞·ª£ng Digital Twins
      </span>{" "}
      Camera s·ªë h√≥a c·∫£nh l√†m vi·ªác th·ª±c t·∫ø d∆∞·ªõi d·∫°ng ƒë√°m m√¢y ƒëi·ªÉm 3D. C·∫£m bi·∫øn s·ª≠ d·ª•ng c√¥ng ngh·ªá th·ªã gi√°c l·∫≠p th·ªÉ ƒë·ªÉ thu th·∫≠p d·ªØ li·ªáu, ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng th√¥ng tin trong b·∫£n qu√©t ƒë·ªÉ ƒë·∫°t hi·ªáu su·∫•t t·ªëi ƒëa. Ng∆∞·ªùi d√πng c√≥ th·ªÉ ƒë·ªãnh nghƒ©a ƒë·ªì h·ªça c√°c tham s·ªë c·ªßa c·∫£nh l·∫•y h√†ng trong th√πng: th·ªÉ t√≠ch l√†m vi·ªác, m·∫≠t ƒë·ªô ƒëi·ªÉm trong ƒë√°m m√¢y ƒëi·ªÉm, v.v.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/grasping_pointcloud.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={500}
        height={300}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        B∆∞·ªõc 2: ƒê·ªãnh v·ªã ƒë·ªëi t∆∞·ª£ng d·ª±a tr√™n m√¥ h√¨nh AI t√≠ch h·ª£p th·ªã gi√°c
      </span>{" "}
      Ph·∫ßn m·ªÅm x·ª≠ l√Ω h√¨nh ·∫£nh x√°c ƒë·ªãnh v·ªã tr√≠ ph·∫ßn t·ªët nh·∫•t ƒë·ªÉ c·∫ßm d·ª±a tr√™n ƒëo ƒë·∫°c 3D, so s√°nh v·ªõi m√¥ h√¨nh CAD c·ªßa chi ti·∫øt, ho·∫∑c t·ª± ƒë·ªông ph√°t hi·ªán h√¨nh d·∫°ng. ƒê·ªÉ ƒë·∫£m b·∫£o c·∫ßm n·∫Øm an to√†n, m·ªçi s·ª± ch·ªìng l·∫•n v·ªõi c√°c chi ti·∫øt kh√°c ƒë∆∞·ª£c m√¥ ph·ªèng b·∫±ng c√°ch x√¢y d·ª±ng c·∫£nh l√†m vi·ªác ·∫£o.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/grasping_point.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={500}
        height={300}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        B∆∞·ªõc 3: Qu·∫£n l√Ω gripper v√† ƒëi·ªÉm c·∫ßm n·∫Øm
      </span>{" "}
      Nhi·ªÅu gripper v√† ƒëi·ªÉm l·∫•y h√†ng c√≥ th·ªÉ d·ªÖ d√†ng ƒë·ªãnh nghƒ©a trong ph·∫ßn m·ªÅm ƒë·ªÉ l√†m r·ªóng ho√†n to√†n container. C√¥ng c·ª• m√¥ ph·ªèng t√≠ch h·ª£p ki·ªÉm tra thi·∫øt k·∫ø c√°c ph·∫ßn c∆° kh√≠ (cell, robot, gripper) v√† kh·∫£ nƒÉng ti·∫øp c·∫≠n c√°c ƒëi·ªÉm c·∫ßm n·∫Øm.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/grasping.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={500}
        height={300}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        B∆∞·ªõc 4: Qu·∫£n l√Ω qu·ªπ ƒë·∫°o robot
      </span>{" "}
      Ph·∫ßn m·ªÅm t√≠nh to√°n qu·ªπ ƒë·∫°o robot t·ªëi ∆∞u, b·∫•t k·ªÉ h√£ng v√† m·∫´u m√£, ƒë·ªÉ tr√°nh va ch·∫°m v·ªõi m√¥i tr∆∞·ªùng l√†m vi·ªác v√† ƒë·ªìng nghi·ªáp con ng∆∞·ªùi. N√≥ truy·ªÅn c√°c v·ªã tr√≠ g√≥c c·ªßa t·ª´ng tr·ª•c ƒë·∫øn b·ªô ƒëi·ªÅu khi·ªÉn robot, t√≠nh ƒë·∫øn c√°c ƒëi·ªÉm k·ª≥ d·ªã.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/grasping_panda.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={500}
        height={300}
        className="rounded-lg"
      />
    </div>
  </div>
);

const PalletizingContent = () => (
  <div className="bg-[#F5F5F7] p-8 md:p-14 rounded-3xl mb-4">
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        V·ªõi c√¥ng ngh·ªá s√¢u v√† AI c√πng c√¥ng ngh·ªá Digital Twins ti√™n ti·∫øn.
      </span>{" "}
      Ch√∫ng t√¥i c√≥ th·ªÉ cung c·∫•p gi·∫£i ph√°p robot x·∫øp pallet t·ªët nh·∫•t cho doanh nghi·ªáp c·ªßa b·∫°n.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/fanuc_palletizing.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={800}
        height={400}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        ƒê·ªô b·ªÅn k·∫øt h·ª£p hi·ªáu su·∫•t:
      </span>{" "}
      Gi·∫£i ph√°p x·∫øp pallet c·ªßa ch√∫ng t√¥i ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ho·∫°t ƒë·ªông b·ªÅn b·ªâ trong m√¥i tr∆∞·ªùng kh·∫Øc nghi·ªát, ƒë·∫£m b·∫£o hi·ªáu su·∫•t ·ªïn ƒë·ªãnh ngay c·∫£ trong ƒëi·ªÅu ki·ªán kh√≥ khƒÉn nh·∫•t.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        C√¥ng ngh·ªá ti√™n ti·∫øn
      </span>{" "}
      Trang b·ªã c·∫£m bi·∫øn v√† h·ªá th·ªëng gi√°m s√°t hi·ªán ƒë·∫°i, thi·∫øt b·ªã x·∫øp pallet c·ªßa ch√∫ng t√¥i th√≠ch ·ª©ng v·ªõi ƒëi·ªÅu ki·ªán thay ƒë·ªïi, ƒë·∫£m b·∫£o hi·ªáu su·∫•t v√† an to√†n t·ªëi ∆∞u m·ªçi l√∫c.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        T√≠nh nƒÉng an to√†n n√¢ng cao
      </span>{" "}
      Thi·∫øt b·ªã x·∫øp pallet ch·∫Øc ch·∫Øn c·ªßa ch√∫ng t√¥i bao g·ªìm c√°c c∆° ch·∫ø an to√†n ti√™n ti·∫øn nh·∫±m b·∫£o v·ªá c·∫£ l·ª±c l∆∞·ª£ng lao ƒë·ªông v√† m√°y m√≥c trong m√¥i tr∆∞·ªùng l√†m vi·ªác ƒë·∫ßy th√°ch th·ª©c.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        T√≠ch h·ª£p hi·ªáu qu·∫£
      </span>{" "}
      H·ªá th·ªëng x·∫øp pallet c·ªßa ch√∫ng t√¥i d·ªÖ d√†ng t√≠ch h·ª£p v√†o quy tr√¨nh l√†m vi·ªác hi·ªán c√≥, ƒë·∫£m b·∫£o chuy·ªÉn ƒë·ªïi li·ªÅn m·∫°ch gi√∫p tƒÉng nƒÉng su·∫•t m√† kh√¥ng g√¢y gi√°n ƒëo·∫°n.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        ƒê·ªëi t√°c th√†nh c√¥ng
      </span>{" "}
      H√£y ƒë·ªÉ ch√∫ng t√¥i gi√∫p b·∫°n v∆∞·ª£t qua nh·ªØng th√°ch th·ª©c c·ªßa m√¥i tr∆∞·ªùng kh·∫Øc nghi·ªát v·ªõi gi·∫£i ph√°p x·∫øp pallet ƒë√°ng tin c·∫≠y v√† b·ªÅn b·ªâ, ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ h·ªó tr·ª£ m·ª•c ti√™u kinh doanh c·ªßa b·∫°n trong nhi·ªÅu nƒÉm t·ªõi.
    </p>
  </div>
);

const DigitalTwinContent = () => (
  <div className="bg-[#F5F5F7] p-8 md:p-14 rounded-3xl mb-4">
    <div className="flex justify-center mb-6">
      <Image
        src="/digitaltwin_ur.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={800}
        height={500}
        className="rounded-lg"
      />
    </div>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        C√°ch m·∫°ng h√≥a C√¥ng nghi·ªáp 4.0 v·ªõi c√¥ng ngh·ªá Digital Twin theo th·ªùi gian th·ª±c
      </span>{" "}
      Khung Digital Twin (DT) ti√™n ti·∫øn c·ªßa ch√∫ng t√¥i ƒëang chuy·ªÉn ƒë·ªïi vi·ªác gi√°m s√°t s·ª©c kh·ªèe m√°y m√≥c trong c√°c ·ª©ng d·ª•ng chƒÉm s√≥c m√°y robot. ƒê∆∞·ª£c x√¢y d·ª±ng d·ª±a tr√™n ti√™u chu·∫©n ISO 23247, h·ªá th·ªëng s√°ng t·∫°o n√†y t·∫°o ra b·∫£n sao ·∫£o c·ªßa t√†i s·∫£n v·∫≠t l√Ω, cho ph√©p gi√°m s√°t th·ªùi gian th·ª±c v√† b·∫£o tr√¨ d·ª± ƒëo√°n.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/digitaltwin_palletizing.png"
        alt="·∫¢nh minh h·ªça n·ªôi dung"
        width={800}
        height={400}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        C√°c t√≠nh nƒÉng ch√≠nh:
      </span>{" "}
      <ul>
        <li>‚Ä¢ T√≠ch h·ª£p li·ªÅn m·∫°ch v·ªõi robot v√† gripper th√¥ng qua giao ti·∫øp c√¥ng nghi·ªáp m·∫°nh m·∫Ω,</li>
        <li>‚Ä¢ C·∫•u h√¨nh ph·∫ßn c·ª©ng ti√™n ti·∫øn bao g·ªìm cobot, gripper th√¥ng minh v√† camera ƒë·ªô ch√≠nh x√°c cao,</li>
        <li>‚Ä¢ Ki·∫øn tr√∫c kh√¥ng gian m·∫°ng ba l·ªõp cho qu·∫£n l√Ω v√† ph√¢n t√≠ch d·ªØ li·ªáu to√†n di·ªán,</li>
        <li>‚Ä¢ Kh·∫£ nƒÉng t√≠nh to√°n bi√™n cho quy·∫øt ƒë·ªãnh t·ª± ch·ªß,</li>
        <li>‚Ä¢ Giao di·ªán ng∆∞·ªùi d√πng d·ª±a tr√™n ƒë√°m m√¢y cho gi√°m s√°t v√† ƒëi·ªÅu khi·ªÉn t·ª´ xa,</li>
      </ul>
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        Hi·ªáu su·∫•t ƒë√£ ƒë∆∞·ª£c ch·ª©ng minh:
      </span>{" "}
      Khung DT c·ªßa ch√∫ng t√¥i ƒë√£ th·ªÉ hi·ªán ƒë·ªô ch√≠nh x√°c xu·∫•t s·∫Øc trong vi·ªác t√°i t·∫°o chuy·ªÉn ƒë·ªông cobot v√† v·ªã tr√≠ c√¥ng c·ª•. Ki·ªÉm tra nghi√™m ng·∫∑t s·ª≠ d·ª•ng c√°c ch·ªâ s·ªë ti√™u chu·∫©n ng√†nh (RMSE, MAPE, R2 Score) x√°c nh·∫≠n ƒë·ªô trung th·ª±c cao c·ªßa c√°c m√¥ ph·ªèng k·ªπ thu·∫≠t s·ªë.
    </p>
    <div className="flex justify-center mb-6">
      <Image
        src="/digitaltwin_framework.png"
        alt="Khung gi√°m s√°t s·ª©c kh·ªèe m√°y th·ªùi gian th·ª±c cho ·ª©ng d·ª•ng chƒÉm s√≥c robot CNC d·ª±a tr√™n ki·∫øn tr√∫c ISO 23247 v·ªõi giao ti·∫øp qua OPC-UA."
        width={800}
        height={400}
        className="rounded-lg"
      />
    </div>
    <p className="text-neutral-600 text-base md:text-1xl font-sans max-w-3xl mx-auto">
      Khung gi√°m s√°t s·ª©c kh·ªèe m√°y th·ªùi gian th·ª±c cho ·ª©ng d·ª•ng chƒÉm s√≥c robot CNC d·ª±a tr√™n ki·∫øn tr√∫c ISO 23247 v·ªõi giao ti·∫øp qua OPC-UA.
    </p>

    <p className="text-neutral-600 text-base md:text-2xl font-sans max-w-3xl mx-auto">
      <span className="font-bold text-neutral-700">
        L·ª£i √≠ch cho doanh nghi·ªáp c·ªßa b·∫°n:
      </span>{" "}
      <ul>
        <li>‚Ä¢ TƒÉng t√≠nh l·∫∑p l·∫°i c·ªßa quy tr√¨nh v√† kh·∫£ nƒÉng t√°i t·∫°o chi ti·∫øt,</li>
        <li>‚Ä¢ C·∫£i thi·ªán kh·∫£ nƒÉng t∆∞∆°ng t√°c m√¥ h√¨nh cho s·∫£n xu·∫•t linh ho·∫°t,</li>
        <li>‚Ä¢ Th√¥ng tin th·ªùi gian th·ª±c cho b·∫£o tr√¨ d·ª± ƒëo√°n v√† t·ªëi ∆∞u h√≥a,</li>
        <li>‚Ä¢ Gi·∫£m th·ªùi gian ng·ª´ng ho·∫°t ƒë·ªông v√† tƒÉng hi·ªáu qu·∫£ v·∫≠n h√†nh,</li>
      </ul>
    </p>
  </div>
);



  const partnerLogos = [
    {
      quote: "/logos/ur.webp",     // ‚úÖ image source in quote
      name: "Universal Robots",
      title: "Cobot Leader",
    },
        {
      quote: "/logos/yaskawa.webp",
      name: "Yaskawa",
      title: "Roburst Industrial Robots",
    },
    {
      quote: "/logos/nvidia.png",
      name: "NVIDIA",
      title: "Humanoid Robot AI Acceleration",
    },
      {
      quote: "/logos/franka.jpg",
      name: "Franka Emika",
      title: "Safe Robotics & high dexterity",
    },
    {
      quote: "/logos/fanuc.png",
      name: "FANUC",
      title: "Leading Industrial Robots",
    },
  
      {
      quote: "/logos/ufactory.png",
      name: "UFactory",
      title: "Affordable Cobots",
    },

  ];

  

  const data = [
    
   
    { 
      category: "·ª®ng d·ª•ng trong ng√†nh logistics",
      title: "Robot t·ª± h√†nh g·∫Øp v√† ƒë·∫∑t h√†ng",
      src: "/ur2.jpg",
      content: <PickingContent /> ,
    },
   
    {
      category: "T√≠ch h·ª£p AI v√† th·ªã gi√°c m√°y t√≠nh",  
      title: "M√¥ h√¨nh AI Vision-Embodied AI ti√™n ti·∫øn",
      src: "/aimodels.png",
      content: <VisionContent />,
    },
    {
      category: "T√≠ch h·ª£p Digital Twins cho Robotics",
      title: "N·ªÅn t·∫£ng Digital Twins cho Robotics ti√™n ti·∫øn",
      src: "/dtwin.png",
      content: <DigitalTwinContent />,
    },
   
    {
      category: "Ho·∫°t ƒë·ªông trong m√¥i tr∆∞·ªùng kh·∫Øc nghi·ªát",
      title: "Robot x·∫øp v√† d·ª° pallet b·ªÅn b·ªâ",
      src: "/fanuc.jpg",
      content: <PalletizingContent />,
    },
  
  ];
  
  

export default Hero